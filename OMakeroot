open build/OCaml
open tools/OMakeLibrary.om
DefineCommandVars()

.PHONY: build-all doc install uninstall


################################################################################
# General Project Information
PROJECT = biokepi
VERSION = 0.0.0+master
DESCRIPTION = Bioinformatics Ketrew Workflow-Building Library

if $(test -e .git)
    GIT_COMMIT = Some "$(shell git rev-parse HEAD)"
    export
else
    GIT_COMMIT = None
    export

if $(eq $(shell-code ocamlfind list | grep ketrew.lwt_unix), 0)
    KETREW_PACKAGE=ketrew.lwt_unix
    export
else
    KETREW_PACKAGE=ketrew
    export


LIB_PACKAGES = $(KETREW_PACKAGE) ppx_deriving.std

OCAMLFLAGS = -bin-annot -absname -thread -short-paths -g \
             -keep-docs -keep-locs \
             -strict-formats -strict-sequence -w +9 -safe-string

section # Run-environment library
    OCAMLPACKS[] = $(LIB_PACKAGES)
    _build/src/run_environment/metadata.ml: :value: $(VERSION)
        echo "(** Metadata generated at compile-time *)" > $@
        echo "let version = lazy \"$(VERSION)\"" >> $@
        echo "let git_commit = $(GIT_COMMIT)" >> $@
    OCAML_GENERATED_MODULES[] = metadata
    .DEFAULT: $(OCamlPackedLibraryOfDir biokepi_run_environment, src/run_environment)

section # Setup-run-environment library
    OCAMLPACKS[] = $(LIB_PACKAGES)
    OCAML_LOCAL_LIBS += src/run_environment/biokepi_run_environment
    .DEFAULT: $(OCamlPackedLibraryOfDir biokepi_environment_setup, src/environment_setup)

section # Bioinformatics workflow nodes library
    OCAMLPACKS[] = $(LIB_PACKAGES)
    OCAML_LOCAL_LIBS += src/run_environment/biokepi_run_environment
    .DEFAULT: $(OCamlPackedLibraryOfDir biokepi_bfx_tools, src/bfx_tools)

section # High-level pipeline library
    OCAMLPACKS[] = $(LIB_PACKAGES)
    OCAML_LOCAL_LIBS += src/run_environment/biokepi_run_environment \
                        src/bfx_tools/biokepi_bfx_tools
    .DEFAULT: $(OCamlPackedLibraryOfDir biokepi_pipeline_edsl, src/pipeline_edsl)

section # Whole API library
    OCAMLPACKS[] = $(LIB_PACKAGES)
    OCAML_LOCAL_LIBS += src/run_environment/biokepi_run_environment \
                        src/environment_setup//biokepi_environment_setup \
                        src/bfx_tools/biokepi_bfx_tools \
                        src/pipeline_edsl/biokepi_pipeline_edsl
    .DEFAULT: $(OCamlSingleFileLibrary biokepi, src/lib/biokepi.ml)

section # "main" demo application
    OCAML_LOCAL_LIBS += src/run_environment/biokepi_run_environment \
                        src/environment_setup//biokepi_environment_setup \
                        src/bfx_tools/biokepi_bfx_tools \
                        src/pipeline_edsl/biokepi_pipeline_edsl \
                        src/lib/biokepi
    OCAMLPACKS[] = $(LIB_PACKAGES)
    .DEFAULT: $(OCamlProgramOfFile biokepi-demo, $(file src/app/main.ml))

section # Executable tests
    OCAML_LOCAL_LIBS += src/run_environment/biokepi_run_environment \
                        src/environment_setup//biokepi_environment_setup \
                        src/bfx_tools/biokepi_bfx_tools \
                        src/pipeline_edsl/biokepi_pipeline_edsl \
                        src/lib/biokepi
    OCAMLPACKS[] = $(LIB_PACKAGES)
    OCamlProgramOfFile(biokepi-tests, $(file src/test/main.ml))
    OCamlProgramOfFile(biokepi-test-all-downloads, $(file src/test/all_downloads.ml))
    OCamlProgramOfFile(biokepi-test-ttfi-pipeline, $(file src/test/ttfi_pipeline.ml))
    OCamlProgramOfFile(biokepi-hla-typer, $(file src/app/hla_typer.ml))
    OCamlProgramOfFile(biokepi-input-generator, $(file src/app/input_gen.ml))
    OCamlProgramOfFile(biokepi-edsl-input-json, $(file src/test/edsl_input_json.ml))


DotMerlin(./src, $(LIB_PACKAGES))

install: install-lib-biokepi_run_environment \
         install-lib-biokepi_environment_setup \
         install-lib-biokepi_bfx_tools \
         install-lib-biokepi_pipeline_edsl \
         install-lib-biokepi \
         install-app-biokepi-demo \
         install-app-biokepi-input-generator
uninstall: uninstall-lib-biokepi_run_environment \
           uninstall-lib-biokepi_environment_setup \
           uninstall-lib-biokepi_bfx_tools \
           uninstall-lib-biokepi_pipeline_edsl \
           uninstall-lib-biokepi \
           uninstall-app-biokepi-demo \
           uninstall-app-biokepi-input-generator

# `omake build-all` to build also the tests:
build-all: lib-biokepi_run_environment \
           lib-biokepi_environment_setup \
           lib-biokepi_bfx_tools \
           lib-biokepi_pipeline_edsl \
           lib-biokepi \
           app-biokepi-demo \
           app-biokepi-input-generator \
           app-biokepi-tests app-biokepi-test-all-downloads \
           app-biokepi-hla-typer  app-biokepi-test-ttfi-pipeline \
           app-biokepi-edsl-input-json

.PHONY: doc

DOC_PACKAGES[] = $(LIB_PACKAGES)
doc:
    ./tools/build-doc.sh $(concat \,, $(LIB_PACKAGES))


DIRS[] = src/run_environment/ src/environment_setup/ src/bfx_tools/ src/pipeline_edsl/ src/lib
LIBS[] = biokepi_run_environment biokepi_environment_setup \
         biokepi_bfx_tools biokepi_pipeline_edsl biokepi
DotOCamlinit($(DIRS), $(LIB_PACKAGES), $(LIBS))
